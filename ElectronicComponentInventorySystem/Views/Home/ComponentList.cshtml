@model ElectronicComponentInventorySystem.UI.Models.FilterViewModel
@{
    ViewData["Title"] = "Electronic Component Database";
}



<div class="text-center">
    <h1 class="display-4">Electronic Component List</h1>
</div>
<br />
<nav class="navbar navbar-light bg-light">
    <a class="navbar-brand">Electronic Component search by Electronic Components Name</a>
    <form class="form-inline" method="post">
        <input class="form-control mr-sm-2" asp-for="Search" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
</nav>
<br />
<h2>Parts List</h2>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Category</th>
            <th>Storage Location</th>
            <th>Footprint</th>
            <th>Stock Level</th>
            <th>Stock User</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    @if (Model.FoundComponents != null)
    {
        <tbody>
            @foreach (var components in Model.FoundComponents)
            {
        <th>@Html.DisplayFor(modelItem => components.Id)</th>
                <th>@Html.DisplayFor(modelItem => components.Name)</th>
                <th>@Html.DisplayFor(modelItem => components.Description)</th>
                <th>@Html.DisplayFor(modelItem => components.Category)</th>
                <th>@Html.DisplayFor(modelItem => components.StorageLocation)</th>
                <th>@Html.DisplayFor(modelItem => components.Footprint)</th>
                <th>@Html.DisplayFor(modelItem => components.StockLevel)</th>
                <th>@Html.DisplayFor(modelItem => components.StockUser)</th>
            }
        </tbody>
    }
</table>
<br />

